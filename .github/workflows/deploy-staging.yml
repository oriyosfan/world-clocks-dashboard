name: Deploy Staging

on:
  push:
    branches: [staging]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run CI checks (lint, typecheck, unit tests)
        run: |
          npm run lint
          npm run typecheck
          npm run test

      - name: Build
        env:
          NEXT_TELEMETRY_DISABLED: 1
        run: npm run build

      - name: Start app (background)
        run: npx next start -p 3002 -H 127.0.0.1 & echo $! > .server-pid

      - name: Wait for app
        run: npx wait-on http://127.0.0.1:3002 --timeout 120000

      - name: Run Cypress E2E
        env:
          CYPRESS_BASE_URL: http://127.0.0.1:3002
        run: npm run cy:run

      - name: Stop app
        if: always()
        run: kill $(cat .server-pid) || true

      # Example: Vercel CLI deploy (optional). Set VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID secrets.
      - name: Deploy to Vercel (staging)
        if: ${{ env.VERCEL_TOKEN != '' && env.VERCEL_ORG_ID != '' && env.VERCEL_PROJECT_ID != '' }}
        run: npx vercel deploy --prebuilt --yes --token ${{ env.VERCEL_TOKEN }} --scope ${{ env.VERCEL_ORG_ID }} --env NEXT_PUBLIC_STAGE=staging
